{
  "_from": "vue-acl@^3.0.4",
  "_id": "vue-acl@3.0.4",
  "_inBundle": false,
  "_integrity": "sha512-R5lIgmdOt+0A8OdfGbKRxM0/6m+ItY1M+iH6wsLCD554C+RdHF+vCopSoOxeZY929pk2Cht8m3XuOnB//evjQw==",
  "_location": "/vue-acl",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-acl",
    "fetchSpec": "^3.0.4",
    "name": "vue-acl",
    "raw": "vue-acl@^3.0.4",
    "rawSpec": "^3.0.4",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-acl/-/vue-acl-3.0.4.tgz",
  "_shasum": "b916606a422936ff6ff0239d21d4bf91ad6994c2",
  "_spec": "vue-acl@^3.0.4",
  "_where": "/opt/lampp/htdocs/IFAB_AdministratorSystem",
  "author": {
    "name": "Leonardo Vilarinho"
  },
  "bugs": {
    "url": "https://github.com/leonardovilarinho/vue-acl/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Plugin of Access Control List from Vue JS 2",
  "devDependencies": {
    "ava": "^0.23.0",
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-es2015": "^6.24.1"
  },
  "homepage": "https://github.com/leonardovilarinho/vue-acl#readme",
  "keywords": [
    "acl",
    "control",
    "user",
    "vuejs"
  ],
  "license": "ISC",
  "main": "dist/vue-acl.js",
  "name": "vue-acl",
  "optionalDependencies": {},
  "readme": "# Plugin of Access Control List from Vue JS 2\n\n>This plugin aims to control the layout of the system and block access to certain routes of the vue-router, that according to the current active permission on the system.\n\n### Dependencies:\n- Vue.js version 2\n- vue-router\n\n### Installation\n\nWe have two methods of installed, you can use the npm or a standalone.\n\n#### To install with NPM\n\nUse the following command to install as dependency:\n```bash\nnpm install vue-acl --save\n```\n#### For standalone installation\n\nTo install just copy the file `source/vue-acl.js` to your plugins directory.\n\n### Get Started:\n\n**[1]:** Import the plugin and register it on VueJS, it is necessary to send as a parameter the vue router-router and the default system permission:\n\n```js\nimport Router from '../routes/router'\nimport Acl from 'vue-acl'\nVue.use( Acl, { router: Router, init: 'public' } )\n```\n\n**[2]:** Add metadata in their routes saying which permission, or group of permissions is required to access the route, use pipe (|) to do an OR check for more than one permission, use (&) to do an AND check for multiple permissions (these can be used in combination for more complex situations). Use the ' fail ' metadata to indicate which this route to redirect on error:\n```js\n[\n  {\n    path: '/',\n    component: require('./components/Public.vue'),\n    meta: {\n      permission: 'public',\n      fail: '/error-public'\n    }\n  },\n  {\n    path: '/manager',\n    component: require('./components/Manager.vue'),\n    meta: {\n      permission: 'manager',\n    }\n  },\n  {\n    path: '/client',\n    component: require('./components/Client.vue'),\n    meta: {\n      permission: 'client',\n    }\n  },\n  {\n    path: '/error',\n    component: require('./components/Error.vue'),\n    meta: {\n      permission: 'public'\n    }\n  },\n]\n```\n\n*Note1:* Use `public` permission to users not logged, the `vue-acl` handler automatic this route to public users.\n\n*Note2:* Use `fail` to declare redirect error excluvise to this route.\n\n#### Use public fail route\n\nUse `Vue.use( Acl, { router: Router, init: 'public', fail: '/error' } )` to redirect default erros to `/error` route.\n\n#### Save permission to refresh page\n\nUse flag `save` to save permission in SessionStorage, but your app can insecure. Example: `Vue.use( Acl, { router: Router, init: 'public', save: true } )`\n\n\n**[3]:** The components use the global method `$can()` to verify that the system gives access to permission passed by parameter:\n\n```vue\n<router-link v-show='$can(\"client|manager\")'  to='/client'>To client</router-link> |\n<router-link v-show='$can(\"manager\")'         to='/manager'>To manager</router-link> |\n<router-link v-show='$can(\"public\")'          to='/'>To Public</router-link>\n```\n\nThis method receives a parameter with the permissions to check, separated by a pipe (|) or ampersand (&), and returns a `bool` saying if permission has been granted.\n\nTo change the current system permission use the global attribute `access`, passing the new permission, or array of permissions:\n```js\n this.access = 'admin'\n```\nor:\n```js\n this.access = ['edit', 'delete']\n```\nor with & operator:\n```js\n this.access = 'edit&delete'\n```\n\nTo see the current system permission, just print `this.access` variable.\n\n### Contributing\n\nTo help in the development and expansion of this repository take a FORK to your account, after you have made your modifications do a PULL REQUEST, it will be parsed and included here since it helps the plugin.\n\nBefore send PR, run `npm run build` to transpile es6 to es5 code.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leonardovilarinho/vue-acl.git"
  },
  "scripts": {
    "build": "babel ./source/vue-acl.js --out-file ./dist/vue-acl.js"
  },
  "version": "3.0.4"
}
