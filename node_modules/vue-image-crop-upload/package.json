{
  "_from": "vue-image-crop-upload@^2.2.0",
  "_id": "vue-image-crop-upload@2.2.0",
  "_inBundle": false,
  "_integrity": "sha1-H/MYjmwtPUz5Bkm2qzBOKf/x6ig=",
  "_location": "/vue-image-crop-upload",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-image-crop-upload",
    "fetchSpec": "^2.2.0",
    "name": "vue-image-crop-upload",
    "raw": "vue-image-crop-upload@^2.2.0",
    "rawSpec": "^2.2.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-image-crop-upload/-/vue-image-crop-upload-2.2.0.tgz",
  "_shasum": "1ff3188e6c2d3d4cf90649b6ab304e29fff1ea28",
  "_spec": "vue-image-crop-upload@^2.2.0",
  "_where": "/opt/lampp/htdocs/IFAB_AdministratorSystem",
  "author": {
    "name": "dai-siki"
  },
  "bugs": {
    "url": "https://github.com/dai-siki/vue-image-crop-upload/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "babel-runtime": "^6.11.6"
  },
  "deprecated": false,
  "description": "a vue plgin for image upload and crop（vue图片剪裁上传插件）",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-core": "^6.17.0",
    "babel-eslint": "^8.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-stage-2": "^6.17.0",
    "babel-preset-stage-3": "^6.17.0",
    "browser-sync": "^2.13.0",
    "classnames": "^2.2.5",
    "css-loader": "^0.23.1",
    "eslint": "^4.6.1",
    "gulp": "^3.8.8",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-changed": "^1.3.0",
    "gulp-load-plugins": "^1.2.4",
    "gulp-plumber": "^1.1.0",
    "gulp-sass": "^2.3.2",
    "gulp-uglify": "^2.0.0",
    "gulp-util": "^3.0.7",
    "gulp-watch": "^4.3.6",
    "gulp.spritesmith": "^6.2.1",
    "html-webpack-plugin": "^2.22.0",
    "node-sass": "^3.8.0",
    "sass-loader": "^4.0.0",
    "scss": "^0.2.4",
    "scss-loader": "^0.0.1",
    "style-loader": "^0.13.1",
    "vinyl-named": "^1.1.0",
    "vue": "^1.0.28",
    "vue-html-loader": "^1.2.3",
    "vue-loader": "^8.5.4",
    "vue-style-loader": "^1.0.0",
    "webpack": "^1.13.1",
    "webpack-stream": "^3.2.0"
  },
  "homepage": "https://github.com/dai-siki/vue-image-crop-upload#readme",
  "keywords": [
    "avatar",
    "crop",
    "cropper",
    "file",
    "image",
    "photo",
    "picture",
    "uploader",
    "vue",
    "图片剪裁上传",
    "头像",
    "文件上传"
  ],
  "license": "ISC",
  "main": "upload-2.vue",
  "name": "vue-image-crop-upload",
  "optionalDependencies": {},
  "readme": "# vue-image-crop-upload\n\nA beautiful vue component for image crop and upload. （vue图片剪裁上传组件）.\n\n**Notice**: This component is designed for pc, **not recommended for use on the mobile side**.(该组件适用于pc端，不推荐手机端使用)\n\n[![GitHub issues](https://img.shields.io/github/issues/dai-siki/vue-image-crop-upload.svg)](https://github.com/dai-siki/vue-image-crop-upload/issues)\n[![GitHub forks](https://img.shields.io/github/forks/dai-siki/vue-image-crop-upload.svg)](https://github.com/dai-siki/vue-image-crop-upload/network)\n[![GitHub stars](https://img.shields.io/github/stars/dai-siki/vue-image-crop-upload.svg)](https://github.com/dai-siki/vue-image-crop-upload/stargazers)\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/dai-siki/vue-image-crop-upload.svg?style=social)](https://twitter.com/intent/tweet?text=Wow:&url=%5Bobject%20Object%5D)\n\n[![NPM](https://nodei.co/npm/vue-image-crop-upload.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/vue-image-crop-upload/)\n\n## 中文文档在后面\n\n## Change log\n#### @2.1.0\n- Strengthen the function of image rotation and does not display square preview picture\n\n#### @2.0.5\n- Added the **spanish MX** language pack (thanks @vickvasquez)\n\n#### @2.0.4\n- Added the **Turkish** language pack (thanks @smhayhan)\n\n#### @2.0.2\n- Added the **Dutch** language pack (thanks @blyleven)\n\n#### @2.0.1\n- If url prop is empty, the picture will not be uploaded\n\n#### @2.0.0\n- Adjust the import mode for different versions of vue, **The default vue version is vue2**\n- Added the **French** language pack (thanks @valerymelou)\n- Added the **Portuguese (Brazil)** language pack (thanks @abensur)\n\n#### @1.3.5\n- Added the **Romanian** language pack (thanks @doriandrn)\n\n#### @1.3.0\n- Added the **Russian** language pack (thanks @bigperson)\n- Added a new Props: \"headers\" (Used to set the POST request header)\n\n#### @1.2.0\n- Compatible vue2\n\n#### @1.1.0\n- Adjusted Props naming: \"otherParams\"=>\"params\", \"langConf\"=>“langExt”\n- Optimized language packs\n\n\n## Demo\n[Click me](http://dai-siki.github.io/vue-image-crop-upload/example/demo.html).\n\n\n## Screenshot\n![screenshot](screenshot/1.png)\n\n## Brower compatibility\nIE10+\n\n\n## Env\nvue@1/vue@2 + webpack + es6\n\n\n## Install\n#### npm\n```shell\n$ npm install vue-image-crop-upload\n```\n\n\n## Usage\n#### Props\n| Name              | Type               | Default             | Description                                         |\n| ----------------| ---------------- | ---------------| ------------------------------------------|\n| url             | String            |  ''                | Server api path,like \"/avatar/upload\", If empty, will not be uploaded    |\n| field       | String   | 'upload'     | Upload input filename, used for server side get the file stream.    |\n| value             | Boolean            | twoWay            | show or not    |\n| params             | Object            |  null                | POST Params，like \"{k:v}\"    |\n| headers             | Object            |  null                | POST request header，like \"{k:v}\"    |\n| langType             | String            | 'zh'                 | language type    |\n| langExt             | Object            |                   | language extend    |\n| width             | Number            |   200                | width of receive image     |\n| height             | Number            |  200                 | height of receive image   |\n| imgFormat             | string            | 'jpg'                  | jpg/png, Server api receive file type.    |\n| noCircle          | Boolean             | false         | disable circle preview |\n| noSquare          | Boolean             | false         | disable square preview |\n| noRotate          | Boolean             | true         | disable rotate function |\n| withCredentials          | Boolean             | false         | support cross-domain |\n\n#### Events\n| Name              | Description                                         |\n| ----------------| ------------------------------------------|\n| cropSuccess   | image crop success, params( imageDataUrl, field )     |\n| cropUploadSuccess | upload success, params( jsonData, field )    |\n| cropUploadFail    | upload fail, params( status, field )    |\n\n#### Language package\n| Support language | Shorthand   | Contributors    |\n| ---------------  | ----------- |---------------- |\n| 中文（default）    | zh           | dai-siki        |\n| English           | en           | dai-siki / doriandrn    |\n| Russian           | ru           | bigperson       |\n| Romanian          | ro           | doriandrn       |\n| Portuguese (Brazil) | pt-br      | abensur       |\n| French            | fr           | valerymelou       |\n| Dutch             | nl           | blyleven       |\n| Turkish             | tr           | smhayhan        |\n| spanish MX         | es-MX          | vickvasquez    |\n\n```js\n// example\n{\n    en: {\n        hint: 'Click or drag the file here to upload',\n        loading: 'Uploading…',\n        noSupported: 'Browser is not supported, please use IE10+ or other browsers',\n        success: 'Upload success',\n        fail: 'Upload failed',\n        preview: 'Preview',\n        btn: {\n            off: 'Cancel',\n            close: 'Close',\n            back: 'Back',\n            save: 'Save'\n        },\n        error: {\n            onlyImg: 'Image only',\n            outOfSize: 'Image exceeds size limit: ',\n            lowestPx: 'Image\\'s size is too low. Expected at least: '\n        }\n    }\n}\n```\n\n#### Example vue@2\n```html\n<div id=\"app\">\n\t<a class=\"btn\" @click=\"toggleShow\">set avatar</a>\n\t<my-upload field=\"img\"\n        @crop-success=\"cropSuccess\"\n        @crop-upload-success=\"cropUploadSuccess\"\n        @crop-upload-fail=\"cropUploadFail\"\n        v-model=\"show\"\n\t\t:width=\"300\"\n\t\t:height=\"300\"\n\t\turl=\"/upload\"\n\t\t:params=\"params\"\n\t\t:headers=\"headers\"\n\t\timg-format=\"png\"></my-upload>\n\t<img :src=\"imgDataUrl\">\n</div>\n\n<script>\n\timport 'babel-polyfill'; // es6 shim\n\timport Vue from 'vue';\n\timport myUpload from 'vue-image-crop-upload';\n\n\tnew Vue({\n\t\tel: '#app',\n\t\tdata: {\n\t\t\tshow: true,\n\t\t\tparams: {\n\t\t\t\ttoken: '123456798',\n\t\t\t\tname: 'avatar'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\tsmail: '*_~'\n\t\t\t},\n\t\t\timgDataUrl: '' // the datebase64 url of created image\n\t\t},\n\t\tcomponents: {\n\t\t\t'my-upload': myUpload\n\t\t},\n\t\tmethods: {\n\t\t\ttoggleShow() {\n\t\t\t\tthis.show = !this.show;\n\t\t\t},\n            /**\n\t\t\t * crop success\n\t\t\t *\n\t\t\t * [param] imgDataUrl\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropSuccess(imgDataUrl, field){\n\t\t\t\tconsole.log('-------- crop success --------');\n\t\t\t\tthis.imgDataUrl = imgDataUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload success\n\t\t\t *\n\t\t\t * [param] jsonData  server api return data, already json encode\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadSuccess(jsonData, field){\n\t\t\t\tconsole.log('-------- upload success --------');\n\t\t\t\tconsole.log(jsonData);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload fail\n\t\t\t *\n\t\t\t * [param] status    server api return error status, like 500\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadFail(status, field){\n\t\t\t\tconsole.log('-------- upload fail --------');\n\t\t\t\tconsole.log(status);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t}\n\t\t}\n\t});\n</script>\n```\n\n#### Example vue@1\n```html\n<div id=\"app\">\n\t<a class=\"btn\" @click=\"toggleShow\">set avatar</a>\n\t<my-upload field=\"img\"\n\t\t:width=\"300\"\n\t\t:height=\"300\"\n\t\turl=\"/upload\"\n\t\t:params=\"params\"\n\t\t:headers=\"headers\"\n        lang-type=\"en\"\n\t\t:value.sync=\"show\"\n\t\timg-format=\"png\"></my-upload>\n\t<img :src=\"imgDataUrl\">\n</div>\n\n<script>\n\timport 'babel-polyfill'; // es6 shim\n\timport Vue from 'vue';\n\timport myUpload from 'vue-image-crop-upload/upload-1.vue';\n\n\tnew Vue({\n\t\tel: '#app',\n\t\tdata: {\n\t\t\tshow: true,\n\t\t\tparams: {\n\t\t\t\ttoken: '123456798',\n\t\t\t\tname: 'avatar'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\tsmail: '*_~'\n\t\t\t},\n\t\t\timgDataUrl: '' // the datebase64 url of created image\n\t\t},\n\t\tcomponents: {\n\t\t\t'my-upload': myUpload\n\t\t},\n\t\tmethods: {\n\t\t\ttoggleShow() {\n\t\t\t\tthis.show = !this.show;\n\t\t\t}\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * crop success\n\t\t\t *\n\t\t\t * [param] imgDataUrl\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropSuccess(imgDataUrl, field){\n\t\t\t\tconsole.log('-------- crop success --------');\n\t\t\t\tthis.imgDataUrl = imgDataUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload success\n\t\t\t *\n\t\t\t * [param] jsonData   server api return data, already json encode\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadSuccess(jsonData, field){\n\t\t\t\tconsole.log('-------- upload success --------');\n\t\t\t\tconsole.log(jsonData);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload fail\n\t\t\t *\n\t\t\t * [param] status    server api return error status, like 500\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadFail(status, field){\n\t\t\t\tconsole.log('-------- upload fail --------');\n\t\t\t\tconsole.log(status);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t}\n\t\t}\n\t});\n\n</script>\n```\n\n\n\n\n--------------------------------\n# 中文文档\n\n## 更新日志\n#### @2.1.0\n- 增加了图片旋转和不显示方形预览图片的功能\n\n#### @2.0.0\n- 默认支持版本改为vue2，vue1的同学需要引入upload-1.vue\n\n#### @1.3.0\n- 添加了新属性: \"headers\" (用于设置请求头部：setRequestHeader)\n\n#### @1.2.0\n- 兼容vue@2版本\n\n#### @1.1.0\n- 调整了Props命名: \"otherParams\"=>\"params\", \"langConf\"=>\"langExt\"\n\n## 示例\n[点我](http://dai-siki.github.io/vue-image-crop-upload/example/demo.html).\n\n## 截图\n![screenshot](screenshot/2.png)\n\n## 浏览器兼容\nIE10+\n\n\n## 配置环境\nvue@2（或vue@1） + webpack + es6\n\n\n## 安装\n#### npm\n```shell\n$ npm install vue-image-crop-upload\n```\n\n\n## 使用\n#### Props\n| 名称              | 类型               | 默认             | 说明                                         |\n| ----------------| ---------------- | ---------------| ------------------------------------------|\n| url             | String            |  ''                | 上传接口地址，如果为空，图片不会上传    |\n| field       | String   | 'upload'     | 向服务器上传的文件名    |\n| value             | Boolean            | twoWay            | 是否显示控件，双向绑定    |\n| params             | Object            |  null                | 上传附带其他数据，格式\"{k:v}\"    |\n| headers             | Object            |  null                | 上传header设置，格式\"{k:v}\"    |\n| langType             | String            | 'zh'                 | 语言类型，默认中文    |\n| langExt             | Object            |                   | 语言包自行扩展    |\n| width             | Number            |   200                | 最终得到的图片宽度     |\n| height             | Number            |  200                 | 最终得到的图片高度   |\n| imgFormat             | string            | 'jpg'                  | jpg/png, 最终得到的图片格式    |\n| noCircle            | Boolean              | false             | 关闭 圆形图像预览 |\n| noSquare            | Boolean              | false             | 关闭 方形图像预览 |\n| noRotate            | Boolean              | true             | 关闭 旋转图像功能 |\n| withCredentials          | Boolean             | false         | 支持跨域 |\n\n#### Events\n| 名称              | 说明                                         |\n| ----------------| ------------------------------------------|\n| cropSuccess   | 图片截取完成事件（上传前), 参数( imageDataUrl, field )     |\n| cropUploadSuccess | 上传成功， 参数( jsonData, field )    |\n| cropUploadFail    | 上传失败， 参数( status, field )    |\n\n#### 自带语言包\n```js\n{\n    zh: {\n        hint: '点击，或拖动图片至此处',\n        loading: '正在上传……',\n        noSupported: '浏览器不支持该功能，请使用IE10以上或其他现在浏览器！',\n        success: '上传成功',\n        fail: '图片上传失败',\n        preview: '头像预览',\n        btn: {\n            off: '取消',\n            close: '关闭',\n            back: '上一步',\n            save: '保存'\n        },\n        error: {\n            onlyImg: '仅限图片格式',\n            outOfSize: '单文件大小不能超过 ',\n            lowestPx: '图片最低像素为（宽*高）：'\n        }\n    }\n}\n```\n\n#### 使用示例 vue@1\n```html\n<div id=\"app\">\n\t<a class=\"btn\" @click=\"toggleShow\">设置头像</a>\n\t<my-upload field=\"img\"\n\t\t:width=\"300\"\n\t\t:height=\"300\"\n\t\turl=\"/upload\"\n\t\t:params=\"params\"\n\t\t:headers=\"headers\"\n\t\t:value.sync=\"show\"\n\t\timg-format=\"png\"></my-upload>\n\t<img :src=\"imgDataUrl\">\n</div>\n\n<script>\n\timport 'babel-polyfill'; // es6 shim\n\timport Vue from 'vue';\n\timport myUpload from 'vue-image-crop-upload/upload-1.vue';\n\n\tnew Vue({\n\t\tel: '#app',\n\t\tdata: {\n\t\t\tshow: true,\n\t\t\tparams: {\n\t\t\t\ttoken: '123456798',\n\t\t\t\tname: 'avatar'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\tsmail: '*_~'\n\t\t\t},\n\t\t\timgDataUrl: '' // the datebase64 url of created image\n\t\t},\n\t\tcomponents: {\n\t\t\t'my-upload': myUpload\n\t\t},\n\t\tmethods: {\n\t\t\ttoggleShow() {\n\t\t\t\tthis.show = !this.show;\n\t\t\t}\n\t\t},\n\t\tevents: {\n            /**\n\t\t\t * crop success\n\t\t\t *\n\t\t\t * [param] imgDataUrl\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropSuccess(imgDataUrl, field){\n\t\t\t\tconsole.log('-------- crop success --------');\n\t\t\t\tthis.imgDataUrl = imgDataUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload success\n\t\t\t *\n\t\t\t * [param] jsonData   服务器返回数据，已进行json转码\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadSuccess(jsonData, field){\n\t\t\t\tconsole.log('-------- upload success --------');\n\t\t\t\tconsole.log(jsonData);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload fail\n\t\t\t *\n\t\t\t * [param] status    server api return error status, like 500\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadFail(status, field){\n\t\t\t\tconsole.log('-------- upload fail --------');\n\t\t\t\tconsole.log(status);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t}\n\t\t}\n\t});\n\n</script>\n```\n\n#### 使用示例 vue@2\n```html\n<div id=\"app\">\n\t<a class=\"btn\" @click=\"toggleShow\">设置头像</a>\n\t<my-upload field=\"img\"\n        @crop-success=\"cropSuccess\"\n        @crop-upload-success=\"cropUploadSuccess\"\n        @crop-upload-fail=\"cropUploadFail\"\n        v-model=\"show\"\n\t\t:width=\"300\"\n\t\t:height=\"300\"\n\t\turl=\"/upload\"\n\t\t:params=\"params\"\n\t\t:headers=\"headers\"\n\t\timg-format=\"png\"></my-upload>\n\t<img :src=\"imgDataUrl\">\n</div>\n\n<script>\n\timport 'babel-polyfill'; // es6 shim\n\timport Vue from 'vue';\n\timport myUpload from 'vue-image-crop-upload';\n\n\tnew Vue({\n\t\tel: '#app',\n\t\tdata: {\n\t\t\tshow: true,\n\t\t\tparams: {\n\t\t\t\ttoken: '123456798',\n\t\t\t\tname: 'avatar'\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\tsmail: '*_~'\n\t\t\t},\n\t\t\timgDataUrl: '' // the datebase64 url of created image\n\t\t},\n\t\tcomponents: {\n\t\t\t'my-upload': myUpload\n\t\t},\n\t\tmethods: {\n\t\t\ttoggleShow() {\n\t\t\t\tthis.show = !this.show;\n\t\t\t},\n            /**\n\t\t\t * crop success\n\t\t\t *\n\t\t\t * [param] imgDataUrl\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropSuccess(imgDataUrl, field){\n\t\t\t\tconsole.log('-------- crop success --------');\n\t\t\t\tthis.imgDataUrl = imgDataUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload success\n\t\t\t *\n\t\t\t * [param] jsonData   服务器返回数据，已进行json转码\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadSuccess(jsonData, field){\n\t\t\t\tconsole.log('-------- upload success --------');\n\t\t\t\tconsole.log(jsonData);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t},\n\t\t\t/**\n\t\t\t * upload fail\n\t\t\t *\n\t\t\t * [param] status    server api return error status, like 500\n\t\t\t * [param] field\n\t\t\t */\n\t\t\tcropUploadFail(status, field){\n\t\t\t\tconsole.log('-------- upload fail --------');\n\t\t\t\tconsole.log(status);\n\t\t\t\tconsole.log('field: ' + field);\n\t\t\t}\n\t\t}\n\t});\n\n</script>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dai-siki/vue-image-crop-upload.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production gulp b",
    "dev": "gulp"
  },
  "version": "2.2.0"
}
